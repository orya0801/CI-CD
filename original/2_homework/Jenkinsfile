pipeline {
  agent {
    label 'docker'
  }


  options {
    buildDiscarder logRotator(numToKeepStr: '5')
    timestamps()
  }

  parameters {
    choice choices: ['orel', 'orel-test'], name: 'NAMESPACE'
  }

  stages {
    stage('Test'){

      agent {
        docker {
            image 'maven:3-alpine'
            label 'docker'
        }
      }

      steps {
        echo "Starting Test Stage!"
        sh 'mvn test'
      }

      post {
        always {
          recordIssues(
            enabledForFailure: true,
            tools: [
              junitParser(pattern: '**/*.xml')
            ]
          )
        }
      }
      
    }

    stage('Build'){

      steps {
        echo "Starting Build Stage!"

        withDockerRegistry(credentialsId: 'dockerhub', url: 'https://index.docker.io/v1/') {
            sh '''
            docker build -t orya0801/javaapp:1.0.0 -t orya0801/javaapp:latest ./original/2_homework/
            docker push orya0801/javaapp:1.0.0
            docker push orya0801/javaapp:latest
            '''
        }

      }
      
    }

    stage('Deploy'){

      steps {
        sh '''
        echo $NAMESPACE
        '''
      }
      
    }
  }
}